#!/bin/sh
# usage: bin/compile <build-dir> <cache-dir>

set -e

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=go1.0.2
buildpack=$(dirname $(dirname $0))

# Python
venv=$cache/venv
mkdir -p $cache/pip
python=python2.7
PATH=$venv/bin:$PATH

virtualenv() {
    python "$buildpack/vendor/virtualenv-1.7/virtualenv.py" "$@"
}

if ! test -f $build/.godir || test -z "$(cat $build/.godir)"
then
    echo >&2 '-----> ERROR: Please create .godir containing the package name of your project (e.g. github.com/org/goprj)'
    exit 1
fi

if test -e $build/bin && ! test -d $build/bin
then
    echo >&2 '-----> ERROR: File bin exists and is not a directory.'
    exit 1
fi

echo "-----> Checking for Mercurial and Bazaar"
(
    set -e
    which hg && which bzr && exit
    echo "Installing Mercurial and Bazaar"

    virtualenv --python $python --distribute --never-download --prompt='(venv) ' $venv
    if [ "$?" -ne 0 ]; then
        echo "Warning: Python environment corrupted. Rebuilding"
        rm -rf $venv/* || true
        virtualenv --python $python --distribute --never-download --prompt='(venv) ' $venv
    fi
    . $venv/bin/activate

    pip install --use-mirrors mercurial
    pip install --use-mirrors bzr
) 2>&1 | sed 's/^/       /'

echo "-----> Using Go $ver"
(
    set -e

    echo "Installing Go $ver -- this only happens once, please be patient"

    test ! -e $cache/go || exit 0

    cd $cache
    hg clone https://code.google.com/p/go
    cd go/src
    GOBIN=$cache/go/bin ./all.bash
)

echo "-----> Running go get and go install"
set -x
name=$(cat $build/.godir)
gopath=${cache}/.gopath
pkg_gopath=${gopath}/src/${name}

unset GIT_DIR

mkdir -p $(dirname ${pkg_gopath})
ln -sfn ${build} ${pkg_gopath}
cd ${pkg_gopath}
mkdir -p bin

unset GOROOT
PATH=$cache/go/bin:${PATH} GOPATH=${gopath} go get -v -d
PATH=$cache/go/bin:${PATH} GOPATH=${gopath} GOBIN=${build}/bin go install -v ${name}
